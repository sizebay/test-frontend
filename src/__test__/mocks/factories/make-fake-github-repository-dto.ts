import { faker } from "@faker-js/faker";

import { IGetGithubRepostoryDTO } from "@/DTOs";
import { TGithubRepositoryVisibility } from "@/types";

import { makeFakeGithubUserDTO } from "./make-fake-github-user-dto";

export function makeFakeGithubRepositoryDTO(): IGetGithubRepostoryDTO {
  const repoName = faker.lorem.word().toLowerCase();
  const fakeUser = makeFakeGithubUserDTO();

  return {
    id: faker.number.int({ min: 1, max: 999999 }),
    node_id: faker.string.uuid(),
    name: repoName,
    full_name: `${fakeUser.login}/${repoName}`,
    private: faker.datatype.boolean(),
    owner: fakeUser,
    html_url: `https://github.com/${fakeUser.login}/${repoName}`,
    description: faker.lorem.sentence(),
    fork: faker.datatype.boolean(),
    url: faker.internet.url(),
    forks_url: faker.internet.url(),
    keys_url: faker.internet.url(),
    collaborators_url: faker.internet.url(),
    teams_url: faker.internet.url(),
    hooks_url: faker.internet.url(),
    issue_events_url: faker.internet.url(),
    events_url: faker.internet.url(),
    assignees_url: faker.internet.url(),
    branches_url: faker.internet.url(),
    tags_url: faker.internet.url(),
    blobs_url: faker.internet.url(),
    git_tags_url: faker.internet.url(),
    git_refs_url: faker.internet.url(),
    trees_url: faker.internet.url(),
    statuses_url: faker.internet.url(),
    languages_url: faker.internet.url(),
    stargazers_url: faker.internet.url(),
    contributors_url: faker.internet.url(),
    subscribers_url: faker.internet.url(),
    subscription_url: faker.internet.url(),
    commits_url: faker.internet.url(),
    git_commits_url: faker.internet.url(),
    comments_url: faker.internet.url(),
    issue_comment_url: faker.internet.url(),
    contents_url: faker.internet.url(),
    compare_url: faker.internet.url(),
    merges_url: faker.internet.url(),
    archive_url: faker.internet.url(),
    downloads_url: faker.internet.url(),
    issues_url: faker.internet.url(),
    pulls_url: faker.internet.url(),
    milestones_url: faker.internet.url(),
    notifications_url: faker.internet.url(),
    labels_url: faker.internet.url(),
    releases_url: faker.internet.url(),
    deployments_url: faker.internet.url(),
    created_at: faker.date.past().toISOString(),
    updated_at: faker.date.recent().toISOString(),
    pushed_at: faker.date.recent().toISOString(),
    git_url: `git://github.com/${fakeUser.login}/${repoName}.git`,
    ssh_url: `git@github.com:${fakeUser.login}/${repoName}.git`,
    clone_url: `https://github.com/${fakeUser.login}/${repoName}.git`,
    svn_url: faker.internet.url(),
    homepage: faker.datatype.boolean() ? faker.internet.url() : null,
    size: faker.number.int({ min: 1, max: 50000 }),
    stargazers_count: faker.number.int({ min: 0, max: 10000 }),
    watchers_count: faker.number.int({ min: 0, max: 10000 }),
    language: faker.helpers.arrayElement([
      "TypeScript",
      "JavaScript",
      "Python",
      "Go",
      null,
    ]),
    has_issues: faker.datatype.boolean(),
    has_projects: faker.datatype.boolean(),
    has_downloads: faker.datatype.boolean(),
    has_wiki: faker.datatype.boolean(),
    has_pages: faker.datatype.boolean(),
    has_discussions: faker.datatype.boolean(),
    forks_count: faker.number.int({ min: 0, max: 5000 }),
    mirror_url: null,
    archived: faker.datatype.boolean(),
    disabled: false,
    open_issues_count: faker.number.int({ min: 0, max: 500 }),
    license: faker.helpers.arrayElement(["MIT", "Apache-2.0", "GPL-3.0", null]),
    allow_forking: true,
    is_template: faker.datatype.boolean(),
    web_commit_signoff_required: false,
    visibility: faker.helpers.arrayElement([
      "public",
      "private",
    ]) as TGithubRepositoryVisibility,
    forks: faker.number.int({ min: 0, max: 5000 }),
    open_issues: faker.number.int({ min: 0, max: 500 }),
    watchers: faker.number.int({ min: 0, max: 10000 }),
    default_branch: "main",
  };
}
